{"version":3,"sources":["themes/index.ts","assets/fonts/OpenSans/OpenSans-Regular.woff2","assets/fonts/OpenSans/OpenSans-SemiBold.woff2","assets/fonts/OpenSans/OpenSans-Bold.woff2","themes/main.theme.ts","components/parallax-scroller/parallax-scroller.styled.ts","hooks/progressive-image.ts","components/parallax-scroller/parallax-scroller.element.tsx","components/parallax-scroller/index.tsx","components/header/header.styled.ts","assets/images/avatar.jpg","app.styled.ts","components/profile/profile.styled.ts","components/profile/index.tsx","components/header/index.tsx","App.tsx","reportWebVitals.ts","configs/fontawesome.ts","index.tsx"],"names":["Breakpoints","EFontKeys","EFontWeightKeys","MainTheme","breakpoints","mobile","tablet","laptop","desktop","fonts","Primary","family","genericFamily","weights","light","regular","medium","bold","local","400","OpenSansRegular","600","OpenSansSemiBold","700","OpenSansBold","badge","color","colors","Light","FadedLight","Neutral","FadedDark","Dark","header","navigationHeight","ScrollerElement","styled","div","props","height","theme","backgroundImage","blur","StaticElement","useProgressiveImg","imagePlaceholder","highQualityImage","useState","src","setSrc","useEffect","img","Image","onload","ParallaxScrollerElement","children","isStatic","image","ParallaxScroller","childrenArray","React","Children","toArray","map","child","index","isValidElement","offset","Navigation","ul","NavigationElement","li","NavigationElementLink","a","ContentContainer","AppContainer","DataField","dt","DataValue","dd","ProfileName","p","ProfileOccupation","ProfileAvatar","ProfileAvatarContainer","ProfileContainer","ProfileDetailsContainer","ProfileIconsContainer","Profile","userData","age","Date","getFullYear","phone","email","address","firstName","lastName","occupation","links","personData","avatar","alt","Object","entries","dataField","dataValue","Fragment","href","icon","faGithubSquare","faLinkedin","faStackOverflow","mask","faSquare","navigation","Header","link","name","App","Array","fill","_","id","data-image-placeholder","data-image","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","library","add","fas","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e4becde.chunk.js","sourcesContent":["import CSS from \"csstype\";\n\nexport enum Breakpoints {\n    Mobile = \"mobile\",\n    Tablet = \"tablet\",\n    Laptop = \"laptop\",\n    Desktop = \"desktop\"\n}\n\nexport type ThemeBreakpoints = Record<Breakpoints, string>;\n\nexport enum EFontKeys {\n    Primary = \"primary\",\n    Secondary = \"secondary\",\n    Tertiary = \"tertiary\"\n}\n\nexport enum EFontWeightKeys {\n    Light = \"light\",\n    Regular = \"regular\",\n    Medium = \"medium\",\n    Bold = \"bold\"\n}\n\nexport interface IFont {\n    url?: string; // External url to the font, i.e: to google fonts\n    local?: Record<number, string>; // object of weight-base64 pairs\n    family: string;\n    genericFamily: \"serif\" | \"sans-serif\" | \"cursive\" | \"fantasy\" | \"monospace\";\n    weights: Record<EFontWeightKeys, number>;\n}\n\nexport type TThemeFonts = {[EFontKeys.Primary]: IFont} & Partial<Record<EFontKeys, IFont>>\n\nexport interface IBaseTheme {\n    breakpoints: ThemeBreakpoints;\n    fonts: TThemeFonts;\n    badge: {color: CSS.Property.Color};\n    colors: {\n        Dark: CSS.Property.Color;\n        FadedDark: CSS.Property.Color;\n        Neutral: CSS.Property.Color;\n        FadedLight: CSS.Property.Color;\n        Light: CSS.Property.Color;\n    }\n    header: {\n        navigationHeight: CSS.Property.Height;\n    }\n}\n","export default __webpack_public_path__ + \"static/media/OpenSans-Regular.403af3bc.woff2\";","export default __webpack_public_path__ + \"static/media/OpenSans-SemiBold.e2426461.woff2\";","export default __webpack_public_path__ + \"static/media/OpenSans-Bold.b87be75f.woff2\";","import {IBaseTheme, EFontKeys, TThemeFonts} from \"./index\";\nimport OpenSansRegular from \"../assets/fonts/OpenSans/OpenSans-Regular.woff2\";\nimport OpenSansSemiBold from \"../assets/fonts/OpenSans/OpenSans-SemiBold.woff2\";\nimport OpenSansBold from \"../assets/fonts/OpenSans/OpenSans-Bold.woff2\";\n\nconst mainFonts: TThemeFonts = {\n    [EFontKeys.Primary]: {\n        family: \"'Source Sans Pro'\",\n        genericFamily: \"sans-serif\",\n        weights: {light: 400, regular: 400, medium: 500, bold: 700},\n        local: {400: OpenSansRegular, 600: OpenSansSemiBold, 700: OpenSansBold}\n    }\n};\n\nconst colorsDark = {\n    Light: \"#7A85AD\",\n    FadedLight: \"#515E90\",\n    Neutral: \"#303E73\",\n    FadedDark: \"#172557\",\n    Dark: \"#07123A\"\n}\n\n// const colorsLight = {\n//     Dark: \"#554D00\",\n//     FadedDark: \"#807615\",\n//     Neutral: \"#807615\",\n//     FadedLight: \"#D4CB6A\",\n//     Light: \"#FFF7AA\",\n// }\n\nexport const MainTheme: Readonly<IBaseTheme> = {\n    breakpoints: {\n        mobile: \"360px\",\n        tablet: \"672px\",\n        laptop: \"1020px\",\n        desktop: \"1440px\"\n    },\n    fonts: mainFonts,\n    badge: {\n        color: \"red\"\n    },\n    colors: colorsDark,\n    header: {\n        navigationHeight: \"56px\"\n    }\n};\n","import styled from \"@emotion/styled\";\nimport {IBaseTheme} from \"../../themes\";\n\nexport interface IParallaxScrollerElementProps {height: string, backgroundImage: string; blur: boolean};\n\nexport const ScrollerElement = styled.div`\n    height: ${(props: IParallaxScrollerElementProps & {theme: IBaseTheme}) => `calc(${props.height} - ${props.theme.header.navigationHeight})`};\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-image: url(${(props: IParallaxScrollerElementProps) => props.backgroundImage});\n    filter: ${(props: IParallaxScrollerElementProps) => props.blur ? \"blur(20px)\" : \"none\"};\n    transition: ${(props: IParallaxScrollerElementProps) => props.blur ? \"none\" : \"filter 0.3s ease-out\"};\n`\n\nexport const StaticElement = styled(ScrollerElement)`\n    background-attachment: fixed;\n`;\n","import {useEffect, useState} from \"react\";\n\nconst useProgressiveImg = (imagePlaceholder: string, highQualityImage: string): [string, {blur: boolean}] => {\n    const [src, setSrc] = useState(imagePlaceholder);\n\n    useEffect(() => {\n        setSrc(imagePlaceholder);\n        const img = new Image();\n        img.src = highQualityImage;\n        img.onload = () => {\n            setSrc(highQualityImage)\n        };\n    }, [imagePlaceholder, highQualityImage]);\n\n    return [src, {blur: src === imagePlaceholder}];\n};\n\nexport default useProgressiveImg;\n","import React from \"react\";\nimport {ScrollerElement, StaticElement} from \"./parallax-scroller.styled\";\nimport useProgressiveImg from \"../../hooks/progressive-image\";\n\nconst ParallaxScrollerElement: React.FC<{children: React.ReactElement, isStatic: boolean}> = ({children, isStatic}) => {\n    const [image, {blur}] = useProgressiveImg(children.props[\"data-image-placeholder\"], children.props[\"data-image\"])\n    const height = children.props[\"data-height\"] || \"100vh\";\n\n    return (\n        isStatic\n            ? <StaticElement height={height} backgroundImage={image} blur={blur}>{children}</StaticElement>\n            : <ScrollerElement height={height} backgroundImage={image} blur={blur}>{children}</ScrollerElement>\n    )\n};\n\nexport default ParallaxScrollerElement;\n","import React from \"react\";\nimport ParallaxScrollerElement from \"./parallax-scroller.element\";\nimport LazyLoad from \"react-lazyload\";\n\nconst ParallaxScroller: React.FC<{ children: React.ReactNode }> = ({children}) => {\n    const childrenArray = React.Children.toArray(children);\n\n    return (\n        <>\n            {React.Children.map(childrenArray, (child, index) => {\n                if (!React.isValidElement(child)) return null;\n                const height = child.props[\"data-height\"] || \"100vh\";\n                return (\n                    <LazyLoad height={height} offset={200}>\n                        <ParallaxScrollerElement isStatic={index % 2 === 0}>{child}</ParallaxScrollerElement>\n                    </LazyLoad>\n                )\n            })}\n        </>\n    );\n};\n\nexport default ParallaxScroller;\n","import styled from \"@emotion/styled\";\n\nexport const Navigation = styled.ul`\n    top: 0;\n    margin: 0;\n    position: sticky;\n    flex-wrap: wrap;\n    text-transform: uppercase;\n    padding: 16px;\n    height: calc(${(props) => props.theme.header.navigationHeight} - 32px); // excluded double padding\n    background: #fff;\n`;\n\nexport const NavigationElement = styled.li`\n    display: inline-block;   \n`\n\nexport const NavigationElementLink = styled.a`\n    color: #000;\n    padding-right: 50px;\n    transition: all .3s;\n    position: relative;\n    text-decoration: none;\n    cursor: pointer;\n    \n    &:after {\n        content: \"_\"\n    }\n    &:not(:hover) {\n        &:after {\n            visibility: hidden;\n        }\n    }\n    &:hover {\n        &:after {\n            animation-name: toggle;\n            animation-duration: 1s;\n            animation-timing-function: linear;\n            animation-iteration-count: infinite;\n        }\n    }\n    @keyframes toggle {\n        from {\n            visibility: hidden;\n        }\n        50% {\n            visibility: hidden;\n        }\n        to {\n            visibility:visible;\n        }\n    }\n`\n","export default __webpack_public_path__ + \"static/media/avatar.59976432.jpg\";","import styled from \"@emotion/styled\";\n\nexport const ContentContainer = styled.div`\n    color: ${({theme}) => theme.colors.Light};\n    max-width: 1140px;\n    margin: auto;\n`;\n\nexport const AppContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    background-color: ${({theme}) => theme.colors.FadedDark};\n`\n","import styled from \"@emotion/styled\";\nimport {ContentContainer} from \"../../app.styled\";\n\nexport const DataField = styled.dt`\n    opacity: .4;\n    float: left;\n    font-weight: 700;\n    text-transform: uppercase;\n    display: block;\n`;\n\nexport const DataValue = styled.dd`\n    padding-left: 100px;\n    margin-bottom: 15px;\n    margin-left: 0;\n    display: block;\n`;\n\nexport const ProfileName = styled.p`\n    font-size: 44px;\n    line-height: 50px;\n    font-weight: 700;\n    margin-top: 40px;\n    margin-bottom: 10px;\n`;\n\nexport const ProfileOccupation = styled.p`\n    font-size: 16px;\n    line-height: 24px;\n    margin-bottom: 40px;\n`;\n\nexport const ProfileAvatar = styled.img`\n    border-radius: 5px;\n    box-shadow: 0 0 27px rgb(96 96 96 / 34%);\n    width: 90%;\n    height: 380px;\n    object-fit: cover;\n    margin-top: 10px;\n`\n\nexport const ProfileAvatarContainer = styled.div`\n    flex: 0 0 33.33333%;\n    max-width: 33.33333%;\n    width: 100%;\n    min-height: 1px;\n`\n\nexport const ProfileContainer = styled(ContentContainer)`\n    padding: 0 15px;\n    padding-top: 90px;\n    display: flex;\n    flex-wrap: wrap;\n`\n\nexport const ProfileDetailsContainer = styled.div`\n    flex: 0 0 66.66667%;\n    max-width: 66.66667%;\n`\n\n\nexport const ProfileIconsContainer = styled.div`\n    font-size: 24px;\n    \n    a {\n        margin-right: 15px;\n        color: ${({theme}) => theme.colors.FadedLight};\n    }\n`\n\n\n\n\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport avatar from \"../../assets/images/avatar.jpg\"\nimport {\n    DataField,\n    DataValue,\n    ProfileAvatar,\n    ProfileAvatarContainer, ProfileContainer,\n    ProfileDetailsContainer,\n    ProfileIconsContainer,\n    ProfileName,\n    ProfileOccupation\n} from \"./profile.styled\";\nimport {faGithubSquare, faLinkedin, faStackOverflow} from \"@fortawesome/free-brands-svg-icons\";\nimport {faSquare} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Profile: React.FC = () => {\n    const userData = {\n        age: new Date().getFullYear() - 1997,\n        phone: \"720-332-342\",\n        email: \"krzysztofadamkrzeszewski@gmail.com\",\n        address: \"I live here\",\n        firstName: \"Krzysztof\",\n        lastName: \"Krzeszewski\",\n        occupation: \"Fullstack Web Developer\"\n    } as const;\n    const links = {\n        stackoverflow: \"https://stackoverflow.com/users/10429793/krzysztof-krzeszewski\",\n        github: \"https://github.com/KonkretneKosteczki\",\n        linkedin: \"https://www.linkedin.com/in/krzysztof-krzeszewski-7175ab190\"\n    } as const;\n\n    const {firstName, lastName, occupation, ...personData} = userData\n\n    return (\n        <ProfileContainer>\n            <ProfileAvatarContainer>\n                <ProfileAvatar src={avatar} alt=\"avatar\"/>\n            </ProfileAvatarContainer>\n            <ProfileDetailsContainer>\n                <ProfileName>{firstName} {lastName}</ProfileName>\n                <ProfileOccupation>{occupation}</ProfileOccupation>\n                <dl>\n                    {Object.entries(personData).map(([dataField, dataValue]) => (\n                        <React.Fragment key={dataField}>\n                            <DataField>{dataField}:</DataField>\n                            <DataValue>{dataValue}</DataValue>\n                        </React.Fragment>\n                    ))}\n                </dl>\n                <ProfileIconsContainer>\n                    <a href={links.github}><FontAwesomeIcon icon={faGithubSquare}/></a>\n                    <a href={links.linkedin}><FontAwesomeIcon icon={faLinkedin}/></a>\n                    <a href={links.stackoverflow}><FontAwesomeIcon icon={faStackOverflow} mask={faSquare}/></a>\n                    {/*<a href=\"\" target=\"_blank\"><i className=\"fa fa-facebook-square\"></i></a>*/}\n                </ProfileIconsContainer>\n            </ProfileDetailsContainer>\n        </ProfileContainer>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport {Navigation, NavigationElement, NavigationElementLink} from \"./header.styled\";\nimport Profile from \"../profile\";\nimport { ContentContainer } from \"../../app.styled\";\n\nconst navigation = {\n    \"#hello\": \"Hello\",\n    \"#resume\": \"Resume\",\n    \"#portfolio\": \"Portfolio\",\n    \"#contact\": \"Contact\"\n} as const;\n\nconst Header: React.FC = () => {\n    return (\n        <>\n            <Profile/>\n            <Navigation>\n                <ContentContainer>\n                    {Object.entries(navigation).map(([link, name]) => (\n                        <NavigationElement key={link}>\n                            <NavigationElementLink href={link}>\n                                {name}\n                            </NavigationElementLink>\n                        </NavigationElement>\n                    ))}\n                </ContentContainer>\n                {/*<div className=\"menu__wrapper col-md-12 d-lg-none\">*/}\n                {/*    <button type=\"button\" className=\"menu__mobile-button\">*/}\n                {/*        <span><i className=\"fa fa-bars\" aria-hidden=\"true\"></i></span>*/}\n                {/*    </button>*/}\n                {/*</div>*/}\n            </Navigation>\n        </>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport {ThemeProvider} from \"@emotion/react\";\nimport {MainTheme} from \"./themes/main.theme\";\nimport \"./App.css\"\nimport ParallaxScroller from \"./components/parallax-scroller\";\nimport Header from \"./components/header\";\nimport {AppContainer, ContentContainer} from \"./app.styled\";\n\nfunction App() {\n    return (\n        <ThemeProvider theme={MainTheme}>\n            <AppContainer>\n                <Header/>\n                <ParallaxScroller>\n                    {new Array(10)\n                        .fill(null)\n                        .map((_, id) => (\n                            <div key={id} data-image-placeholder={`https://picsum.photos/192/108?index=${id}`} data-image={`https://picsum.photos/1920/1080?index=${id}`}>\n                                <ContentContainer>\n                                    TEST\n                                </ContentContainer>\n                            </div>\n                        ))\n                    }\n                </ParallaxScroller>\n                {/*<UserBadge/>*/}\n            </AppContainer>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {fas, faSquare} from \"@fortawesome/free-solid-svg-icons\";\nimport {faGithubSquare, faLinkedin, faStackOverflow} from \"@fortawesome/free-brands-svg-icons\"\n\nlibrary.add(fas, faGithubSquare, faLinkedin, faStackOverflow, faSquare);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./configs/fontawesome\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}