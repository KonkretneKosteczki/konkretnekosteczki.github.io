{"version":3,"sources":["themes/index.ts","assets/fonts/OpenSans/OpenSans-Regular.woff2","assets/fonts/OpenSans/OpenSans-SemiBold.woff2","assets/fonts/OpenSans/OpenSans-Bold.woff2","themes/main.theme.ts","components/parallax-scroller/parallax-scroller.styled.ts","hooks/progressive-image.ts","components/parallax-scroller/parallax-scroller.element.tsx","components/parallax-scroller/index.tsx","components/header/header.styled.ts","components/profile/index.tsx","components/header/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Breakpoints","EFontKeys","EFontWeightKeys","MainTheme","breakpoints","mobile","tablet","laptop","desktop","fonts","Primary","family","genericFamily","weights","light","regular","medium","bold","local","400","OpenSansRegular","600","OpenSansSemiBold","700","OpenSansBold","badge","color","header","navigationHeight","ScrollerElement","styled","div","props","height","theme","backgroundImage","blur","StaticElement","useProgressiveImg","imagePlaceholder","highQualityImage","useState","src","setSrc","useEffect","img","Image","onload","ParallaxScrollerElement","children","isStatic","image","ParallaxScroller","childrenArray","React","Children","toArray","map","child","index","isValidElement","offset","Navigation","ul","NavigationElement","li","NavigationElementLink","a","Profile","className","navigation","Header","Object","entries","link","name","href","App","Array","fill","_","id","data-image-placeholder","data-image","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63d6c51c.chunk.js","sourcesContent":["import CSS from \"csstype\";\r\n\r\nexport enum Breakpoints {\r\n    Mobile = \"mobile\",\r\n    Tablet = \"tablet\",\r\n    Laptop = \"laptop\",\r\n    Desktop = \"desktop\"\r\n}\r\n\r\nexport type ThemeBreakpoints = Record<Breakpoints, string>;\r\n\r\nexport enum EFontKeys {\r\n    Primary = \"primary\",\r\n    Secondary = \"secondary\",\r\n    Tertiary = \"tertiary\"\r\n}\r\n\r\nexport enum EFontWeightKeys {\r\n    Light = \"light\",\r\n    Regular = \"regular\",\r\n    Medium = \"medium\",\r\n    Bold = \"bold\"\r\n}\r\n\r\nexport interface IFont {\r\n    url?: string; // External url to the font, i.e: to google fonts\r\n    local?: Record<number, string>; // object of weight-base64 pairs\r\n    family: string;\r\n    genericFamily: \"serif\" | \"sans-serif\" | \"cursive\" | \"fantasy\" | \"monospace\";\r\n    weights: Record<EFontWeightKeys, number>;\r\n}\r\n\r\nexport type TThemeFonts = {[EFontKeys.Primary]: IFont} & Partial<Record<EFontKeys, IFont>>\r\n\r\nexport interface IBaseTheme {\r\n    breakpoints: ThemeBreakpoints;\r\n    fonts: TThemeFonts;\r\n    badge: {color: CSS.Property.Color};\r\n    header: {\r\n        navigationHeight: CSS.Property.Height;\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/OpenSans-Regular.403af3bc.woff2\";","export default __webpack_public_path__ + \"static/media/OpenSans-SemiBold.e2426461.woff2\";","export default __webpack_public_path__ + \"static/media/OpenSans-Bold.b87be75f.woff2\";","import {IBaseTheme, EFontKeys, TThemeFonts} from \"./index\";\r\nimport OpenSansRegular from \"../assets/fonts/OpenSans/OpenSans-Regular.woff2\";\r\nimport OpenSansSemiBold from \"../assets/fonts/OpenSans/OpenSans-SemiBold.woff2\";\r\nimport OpenSansBold from \"../assets/fonts/OpenSans/OpenSans-Bold.woff2\";\r\n\r\nconst mainFonts: TThemeFonts = {\r\n    [EFontKeys.Primary]: {\r\n        family: \"'Source Sans Pro'\",\r\n        genericFamily: \"sans-serif\",\r\n        weights: {light: 400, regular: 400, medium: 500, bold: 700},\r\n        local: {400: OpenSansRegular, 600: OpenSansSemiBold, 700: OpenSansBold}\r\n    }\r\n};\r\n\r\nexport const MainTheme: Readonly<IBaseTheme> = {\r\n    breakpoints: {\r\n        mobile: \"360px\",\r\n        tablet: \"672px\",\r\n        laptop: \"1020px\",\r\n        desktop: \"1440px\"\r\n    },\r\n    fonts: mainFonts,\r\n    badge: {\r\n        color: \"red\"\r\n    },\r\n    header: {\r\n        navigationHeight: \"56px\"\r\n    }\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport {IBaseTheme} from \"../../themes\";\r\n\r\nexport interface IParallaxScrollerElementProps {height: string, backgroundImage: string; blur: boolean};\r\n\r\nexport const ScrollerElement = styled.div`\r\n    height: ${(props: IParallaxScrollerElementProps & {theme: IBaseTheme}) => `calc(${props.height} - ${props.theme.header.navigationHeight})`};\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-image: url(${(props: IParallaxScrollerElementProps) => props.backgroundImage});\r\n    filter: ${(props: IParallaxScrollerElementProps) => props.blur ? \"blur(20px)\" : \"none\"};\r\n    transition: ${(props: IParallaxScrollerElementProps) => props.blur ? \"none\" : \"filter 0.3s ease-out\"};\r\n`\r\n\r\nexport const StaticElement = styled(ScrollerElement)`\r\n    background-attachment: fixed;\r\n`;\r\n","import {useEffect, useState} from \"react\";\r\n\r\nconst useProgressiveImg = (imagePlaceholder: string, highQualityImage: string): [string, {blur: boolean}] => {\r\n    const [src, setSrc] = useState(imagePlaceholder);\r\n\r\n    useEffect(() => {\r\n        setSrc(imagePlaceholder);\r\n        const img = new Image();\r\n        img.src = highQualityImage;\r\n        img.onload = () => {\r\n            setSrc(highQualityImage)\r\n        };\r\n    }, [imagePlaceholder, highQualityImage]);\r\n\r\n    return [src, {blur: src === imagePlaceholder}];\r\n};\r\n\r\nexport default useProgressiveImg;\r\n","import React from \"react\";\r\nimport {ScrollerElement, StaticElement} from \"./parallax-scroller.styled\";\r\nimport useProgressiveImg from \"../../hooks/progressive-image\";\r\n\r\nconst ParallaxScrollerElement: React.FC<{children: React.ReactElement, isStatic: boolean}> = ({children, isStatic}) => {\r\n    const [image, {blur}] = useProgressiveImg(children.props[\"data-image-placeholder\"], children.props[\"data-image\"])\r\n    const height = children.props[\"data-height\"] || \"100vh\";\r\n\r\n    return (\r\n        isStatic\r\n            ? <StaticElement height={height} backgroundImage={image} blur={blur}>{children}</StaticElement>\r\n            : <ScrollerElement height={height} backgroundImage={image} blur={blur}>{children}</ScrollerElement>\r\n    )\r\n};\r\n\r\nexport default ParallaxScrollerElement;\r\n","import React from \"react\";\r\nimport ParallaxScrollerElement from \"./parallax-scroller.element\";\r\nimport LazyLoad from \"react-lazyload\";\r\n\r\nconst ParallaxScroller: React.FC<{ children: React.ReactNode }> = ({children}) => {\r\n    const childrenArray = React.Children.toArray(children);\r\n\r\n    return (\r\n        <>\r\n            {React.Children.map(childrenArray, (child, index) => {\r\n                if (!React.isValidElement(child)) return null;\r\n                const height = child.props[\"data-height\"] || \"100vh\";\r\n                return (\r\n                    <LazyLoad height={height} offset={200}>\r\n                        <ParallaxScrollerElement isStatic={index % 2 === 0}>{child}</ParallaxScrollerElement>\r\n                    </LazyLoad>\r\n                )\r\n            })}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ParallaxScroller;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Navigation = styled.ul`\r\n    top: 0;\r\n    margin: 0;\r\n    position: sticky;\r\n    flex-wrap: wrap;\r\n    text-transform: uppercase;\r\n    padding: 16px;\r\n    height: calc(${(props) => props.theme.header.navigationHeight} - 32px); // excluded double padding\r\n    background: #fff;\r\n`;\r\n\r\nexport const NavigationElement = styled.li`\r\n    display: inline-block;   \r\n`\r\n\r\nexport const NavigationElementLink = styled.a`\r\n    color: #000;\r\n    padding-right: 50px;\r\n    transition: all .3s;\r\n    position: relative;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    \r\n    &:after {\r\n        content: \"_\"\r\n    }\r\n    &:not(:hover) {\r\n        &:after {\r\n            visibility: hidden;\r\n        }\r\n    }\r\n`\r\n","import React from \"react\";\r\n\r\nconst Profile: React.FC = () => {\r\n    return (\r\n        <div className=\"row personal-profile\">\r\n            {/*<div className=\"col-md-4 personal-profile__avatar\">*/}\r\n            {/*    <img className=\"\" src=\"assets/img/img_avatar.png\" alt=\"avatar\"/>*/}\r\n            {/*</div>*/}\r\n            {/*<div className=\"col-md-8\">*/}\r\n            {/*    <p className=\"personal-profile__name\">John Anderson_</p>*/}\r\n            {/*    <p className=\"personal-profile__work\">frontend developer, QA-engineer</p>*/}\r\n            {/*    <div className=\"personal-profile__contacts\">*/}\r\n            {/*        <dl className=\"contact-list contact-list__opacity-titles\">*/}\r\n            {/*            <dt>Age:</dt>*/}\r\n            {/*            <dd>23</dd>*/}\r\n            {/*            <dt>Phone:</dt>*/}\r\n            {/*            <dd><a href=\"tel:82344563333\">8 (234) 456-33-33</a></dd>*/}\r\n            {/*            <dt>Email:</dt>*/}\r\n            {/*            <dd><a href=\"mailto:mail@mail.com\">mail@mail.com</a></dd>*/}\r\n            {/*            <dt>Address:</dt>*/}\r\n            {/*            <dd>Melbourne Victoria 3000 Australia</dd>*/}\r\n            {/*        </dl>*/}\r\n            {/*    </div>*/}\r\n            {/*    <p className=\"personal-profile__social\">*/}\r\n            {/*        <a href=\"\" target=\"_blank\"><i className=\"fa fa-github\"></i></a>*/}\r\n            {/*        <a href=\"\" target=\"_blank\"><i className=\"fa fa-linkedin-square\"></i></a>*/}\r\n            {/*        <a href=\"\" target=\"_blank\"><i className=\"fa fa-facebook-square\"></i></a>*/}\r\n            {/*    </p>*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport {Navigation, NavigationElement, NavigationElementLink} from \"./header.styled\";\r\nimport Profile from \"../profile\";\r\n\r\nconst navigation = {\r\n    \"#hello\": \"Hello\",\r\n    \"#resume\": \"Resume\",\r\n    \"#portfolio\": \"Portfolio\",\r\n    \"#contact\": \"Contact\"\r\n} as const;\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Profile/>\r\n            <Navigation>\r\n                {Object.entries(navigation).map(([link, name]) => (\r\n                    <NavigationElement key={link}>\r\n                        <NavigationElementLink href={link}>\r\n                            {name}\r\n                        </NavigationElementLink>\r\n                    </NavigationElement>\r\n                ))}\r\n                {/*<div className=\"menu__wrapper col-md-12 d-lg-none\">*/}\r\n                {/*    <button type=\"button\" className=\"menu__mobile-button\">*/}\r\n                {/*        <span><i className=\"fa fa-bars\" aria-hidden=\"true\"></i></span>*/}\r\n                {/*    </button>*/}\r\n                {/*</div>*/}\r\n            </Navigation>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport {ThemeProvider} from \"@emotion/react\";\nimport {MainTheme} from \"./themes/main.theme\";\nimport \"./App.css\"\nimport ParallaxScroller from \"./components/parallax-scroller\";\nimport Header from \"./components/header\";\n\nfunction App() {\n    return (\n        <ThemeProvider theme={MainTheme}>\n            {/*<UserBadge/>*/}\n            <Header/>\n            <ParallaxScroller>\n                {new Array(10)\n                    .fill(null)\n                    .map((_, id) => (\n                        <div key={id} data-image-placeholder={`https://picsum.photos/192/108?index=${id}`} data-image={`https://picsum.photos/1920/1080?index=${id}`}>\n                            TEST\n                        </div>\n                    ))\n                }\n            </ParallaxScroller>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}